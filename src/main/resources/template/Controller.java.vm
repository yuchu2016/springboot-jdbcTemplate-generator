package ${package}.${moduleName}.controller;
import ${package}.${moduleName}.common.Pagination;
import ${package}.${moduleName}.common.Pagination;
import ${package}.${moduleName}.common.ServerResponse;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.springframework.dao.EmptyResultDataAccessException;

import java.util.List;

import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.service.${className}Service;


/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${pathName}")
@Api("${classname}")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;

    @ApiOperation(value = "获取所有${classname}")
    @GetMapping
    public ServerResponse<List<${className}>> getAll() {
        try {
            return ServerResponse.createBySuccess(${classname}Service.getAll());
        } catch (Exception e) {
            return ServerResponse.createByErrorMessage("未知错误");
        }
    }

    @ApiOperation(value = "分页获取user")
    @GetMapping("/page")
    public ServerResponse<Pagination<${className}>> getPage(@RequestParam(name = "pageNum") Integer pageNum, @RequestParam(name = "pageSize") Integer pageSize) {
        try {
            return ServerResponse.createBySuccess(${classname}Service.getPage(pageNum, pageSize));
        } catch (Exception e) {
            return ServerResponse.createByErrorMessage("未知错误");
        }
    }

    @ApiOperation(value = "更新${classname}")
    @PutMapping
    public ServerResponse update${className}(@RequestBody ${className} ${classname}) {
        try {
                ${classname}Service.update${className}(${classname});
            return ServerResponse.createBySuccess();
        } catch (Exception e) {
            return ServerResponse.createByErrorMessage("未知错误");
        }
    }

    @ApiOperation(value = "添加${classname}")
    @PostMapping
    public ServerResponse<${className}> add${className}(@RequestBody ${className} ${classname}) {
        try {
            return ServerResponse.createBySuccess(${classname}Service.add${className}(${classname}));
        } catch (Exception e) {
            return ServerResponse.createByErrorMessage("未知错误");
        }
    }

    @ApiOperation(value = "根据${pk.attrname}获取${classname}")
    @GetMapping("/{${pk.attrname}}")
    public ServerResponse<${className}> get${className}(@PathVariable ${pk.attrType} ${pk.attrname}) {
        try {
            return ServerResponse.createBySuccess(${classname}Service.getById(${pk.attrname}));
        } catch (Exception e) {
            return ServerResponse.createByErrorMessage("未知错误");
        }
    }

    @ApiOperation(value = "根据${pk.attrname}删除${classname}")
    @DeleteMapping
    public ServerResponse delete${className}(@RequestParam(name = "${pk.attrname}") ${pk.attrType} ${pk.attrname}) {
        try {
                ${classname}Service.delete${className}(${pk.attrname});
            return ServerResponse.createBySuccess();
        } catch (Exception e) {
            return ServerResponse.createByErrorMessage("未知错误");
        }
    }

}
